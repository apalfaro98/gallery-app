{"version":3,"sources":["components/NewCategory.js","helpers/getResults.js","components/PictureGridItem.js","components/PictureGrid.js","hooks/useFetch.js","GaleryApp.js","index.js"],"names":["NewCategory","setCategory","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","className","type","placeholder","autoFocus","value","onChange","target","getResults","apiKey","category","a","fetch","encodeURI","resp","status","json","data","pictures","map","img","id","title","alt_description","url","urls","thumb","PictureGridItem","src","alt","PictureGrid","loading","unableToConnect","notFound","state","setState","useEffect","then","catch","useFetch","images","GaleryApp","ReactDOM","render","document","getElementById"],"mappings":"wKAqCeA,EAlCK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAMC,iBAEFJ,EAAWK,QAAQP,EAAYE,GAEnCC,EAAc,KAIgBK,UAAU,mBAAxC,UACI,qBAAKA,UAAU,gBACf,uBACIC,KAAK,OACLC,YAAY,SACZC,WAAW,EACXC,MAAOV,EACPW,SApBc,SAACR,GACvBF,EAAcE,EAAMS,OAAOF,c,8BCPtBG,EAAU,uCAAG,WAAOC,EAAQC,GAAf,mBAAAC,EAAA,sEACHC,MAAM,qDAAD,OAAsDH,EAAtD,kBAAsEI,UAAUH,GAAhF,cADF,UAGF,OAFdI,EADgB,QAGbC,OAHa,yCAGU,KAHV,uBAKHD,EAAKE,OALF,cAKhBC,EALgB,OAOhBC,EAAWD,EAAKE,KAAI,SAAAC,GACtB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIG,gBACXC,IAAKJ,EAAIK,KAAKC,UAXA,kBAcfR,GAde,4CAAH,wDCSRS,EARS,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOE,EAAU,EAAVA,IAC9B,OACI,6BACI,qBAAKI,IAAKJ,EAAKK,IAAKP,EAAOrB,UAAU,aCsClC6B,EAvCK,SAAC,GAAkB,IAEnC,ECFoB,SAACpB,GAErB,IAEA,EAA0BhB,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,EACTC,iBAAiB,EACjBC,UAAU,IAJd,mBAAOC,EAAP,KAAcC,EAAd,KAwCA,OA/BAC,qBAAU,WACN5B,EAZW,8CAYQE,GACd2B,MAAK,SAAApB,GAEEkB,EADS,MAATlB,EACS,CACLA,KAAM,GACNc,SAAS,EACTC,iBAAiB,EACjBC,UAAU,GAGL,CACLhB,OACAc,SAAS,EACTC,iBAAiB,EACjBC,UAAU,OAIrBK,OAAM,WACHH,EAAS,CACLlB,KAAM,GACNc,SAAS,EACTC,iBAAiB,EACjBC,UAAU,SAGvB,CAACvB,IAIGwB,EDrCHK,CAP8B,EAAf7B,UAGT8B,EADV,EACIvB,KACAc,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,gBACAC,EAJJ,EAIIA,SAGJ,OACI,qCACKF,GAAW,qBAAK9B,UAAU,4BAAf,SACR,sBAAKA,UAAU,aAAf,UAA4B,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,6BAE5G+B,GAAmB,qBAAK/B,UAAU,4BAAf,SAChB,gCACI,qBAAKA,UAAU,sBACf,gEAGPgC,GAAY,qBAAKhC,UAAU,4BAAf,SACT,gCACI,qBAAKA,UAAU,iBACf,0EAIR,oBAAIA,UAAU,eAAd,SACKuC,EAAOrB,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEXlBoB,EAnBG,WAEd,MAAgC/C,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiBjB,EAAjB,KAEA,OACI,sBAAKQ,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAaR,YAAaA,IAGtB,cAAC,EAAD,CACIiB,SAAUA,GACLA,O,MCXzBgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ca52495.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewCategory = ({ setCategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleValueChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (inputValue.trim()) setCategory(inputValue);\r\n\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"input__container\">\r\n            <div className=\"search-icon\"></div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                autoFocus={true}\r\n                value={inputValue}\r\n                onChange={handleValueChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nNewCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewCategory;\r\n\r\n\r\n\r\n","\r\nexport const getResults = async (apiKey, category) => {\r\n    const resp = await fetch(`https://api.unsplash.com/photos/random/?client_id=${apiKey}&query=${encodeURI(category)}&count=30`);\r\n\r\n    if (resp.status === 404) return 404;\r\n\r\n    const data = await resp.json();\r\n\r\n    const pictures = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.alt_description,\r\n            url: img.urls.thumb\r\n        }\r\n    })\r\n    return pictures;\r\n\r\n}","import React from 'react'\r\n\r\nconst PictureGridItem = ({ title, url }) => {\r\n    return (\r\n        <li>\r\n            <img src={url} alt={title} className=\"image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default PictureGridItem;\r\n","import React from 'react';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport PictureGridItem from './PictureGridItem';\r\n\r\nconst PictureGrid = ({ category }) => {\r\n\r\n    const {\r\n        data: images,\r\n        loading,\r\n        unableToConnect,\r\n        notFound\r\n    } = useFetch(category);\r\n\r\n    return (\r\n        <>\r\n            {loading && <div className=\"problem-container--center\">\r\n                <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>}\r\n            {unableToConnect && <div className=\"problem-container--center\">\r\n                <div>\r\n                    <div className=\"connection__image\"></div>\r\n                    <p>Cannot connect to database</p>\r\n                </div>\r\n            </div>}\r\n            {notFound && <div className=\"problem-container--center\">\r\n                <div>\r\n                    <div className=\"found__image\"></div>\r\n                    <p>There is no images for this category</p>\r\n                </div>\r\n            </div>}\r\n\r\n            <ol className=\"picture-grid\">\r\n                {images.map(img =>\r\n                    <PictureGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PictureGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getResults } from '../helpers/getResults'\r\n\r\n\r\nexport const useFetch = (category) => {\r\n\r\n    const apiKey = '8800O5782N5enkrU598WG87oQ76XrjGMnSpFDNakcQc';\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n        unableToConnect: false,\r\n        notFound: false\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getResults(apiKey, category)\r\n            .then(data => {\r\n                if (data === 404) {\r\n                    setState({\r\n                        data: [],\r\n                        loading: false,\r\n                        unableToConnect: false,\r\n                        notFound: true\r\n                    })\r\n                } else {\r\n                    setState({\r\n                        data,\r\n                        loading: false,\r\n                        unableToConnect: false,\r\n                        notFound: false\r\n                    })\r\n                }\r\n            })\r\n            .catch(() => {\r\n                setState({\r\n                    data: [],\r\n                    loading: false,\r\n                    unableToConnect: true,\r\n                    notFound: false\r\n                })\r\n            });\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport NewCategory from './components/NewCategory';\r\nimport PictureGrid from './components/PictureGrid';\r\n\r\nconst GaleryApp = () => {\r\n\r\n    const [category, setCategory] = useState('');\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"title\">Gallery</h2>\r\n            <NewCategory setCategory={setCategory} />\r\n\r\n            {\r\n                <PictureGrid\r\n                    category={category}\r\n                    key={category} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GaleryApp\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GaleryApp from './GaleryApp';\nimport './index.css';\n\nReactDOM.render(\n  <GaleryApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}